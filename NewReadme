# Modernizing Brownfield Applications
> Demos Done Right

## The Pain
The problem of using modern software, platforms, and processes that coexist with legacy systems. In this demo we will be demonstrating Vault's capability to manage secrets in Brownfield environments.

## The Solution
HashiCorp Vault's approach to secrets management not only addresses the challenges presented by modern applications, but legacy applications as well. HashiCorp Vault offers a number of 
authentication methods, secrets engines, and client side patterns to address challenges of secrets lifecycle management with legacy systems.


## Additional Content
- [Vault Agent](https://developer.hashicorp.com/vault/docs/agent-and-proxy/agent)
- [Auto-Auth](https://developer.hashicorp.com/vault/docs/agent-and-proxy/autoauth)
- [AppRole](https://developer.hashicorp.com/vault/docs/auth/approle)
- [Database Secrets Engine](https://developer.hashicorp.com/vault/docs/secrets/databases)
- [KV Secrets Engine](https://developer.hashicorp.com/vault/docs/secrets/kv/kv-v2)
- [Vault Agent](https://developer.hashicorp.com/vault/docs/agent-and-proxy/agent)

## Architecture
![)

## Preparing the Demo

1. Take a look at the additional content and agent breakdown ahead of the demo, or reference them to answer questions the prospect may have in regards to the Vault configuration.
2. Run the no code module 10 minutes ahead of the scheduled meeting. This demo environment requires a virtual machine to be spun up along with some configuration scripts that will execute at runtime.
3. Make sure to have you have onboarded your DDR HCP Terraform project and have it using doormat credentials.

# Breakdown of the Vault Agent Configuration

- Take a look at the agent configuration. Typically one of the first configuration options you will see in the Vault Agent is "Auto Auth" where we will define our authentication method, and also configure 
where our Vault token will be stored. In this specific demo we use "Approle", which is a very common authentication method we see used with legacy applications. Take some time here to cover what authentication 
methods are and a few examples.

- The next configuration option you will typically see is how we define a template. Templates will typically be a separate configuration file where we define the secret backend we will
be using, file rendering, and configuration options for that secret. We will have two templates used in this agent configuration, one will be for the static secret (kv2) and one will be for the postgres username/password. 
We have a good amount of Vault Agent Template examples in our documentation if the customer would like to see an example of templating for a secret engine not used in this demo.

- And the last configuration option we use in this demo is the optional "exec". This allows Vault agent to run a child process to run commands, execute scripts, or inject secrets as environment
variables. "exec" is a very useful feature especially in legacy environments where you may need some custom actions to properly consume a secret.

## Talk Track

1. Take a look at the additional content and agent breakdown ahead of the demo, or reference them to answer questions the prospect may have in regards to the Vault configuration.
2. Run the no code module 10 minutes ahead of the scheduled meeting. This demo environment requires a virtual machine to be spun up along with some configuration scripts that will execute at runtime.
3. After the environment is ready, review the resources involved in this demo with the prospect:
- HCP Vault Dedicated Cluster
- AWS Virtual Machine
- AWS RDS (Database)
-Resources to support this infrastructure (Availability Zone, Security Groups, Network etc.)
4. Review the Vault configuration with the prospect:
- Namespace (Named your DDR SLUG)
- Review the KV2 secret "important API key"
- Review the Database Secrets Engine (Postgres) configured to rotate credentials on the AWS RDS instance. Explain that DB Secrets Engine will use a privileged root credential to manage the accounts
  created on the database. Explain that Vault will also be rotating this root credential so only Vault will will have it.
- Mention that the client will be authenticating with Approle. Note the necessary policy that gives access to these configured resources.
5. Jump on to the virtual machine running our brownfield application, and also open the repo containing this workshops Terraform configuration. In the repo you will see a directly called "agent" and go over the "Breakdown of the Vault Agent Configuration".
6. Show the Vault Service running and the brownfield application consuming the secrets being retrieved by Vault. They will be stored in /brownfield-app/config/application-static and application-dynamic.
